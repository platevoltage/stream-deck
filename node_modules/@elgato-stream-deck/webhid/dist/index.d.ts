import type { OpenStreamDeckOptions } from '@elgato-stream-deck/core';
import { StreamDeckWeb } from './wrapper.js';
export { VENDOR_ID, DeviceModelId, KeyIndex, StreamDeck, StreamDeckProxy, LcdPosition, Dimension, StreamDeckControlDefinitionBase, StreamDeckButtonControlDefinition, StreamDeckButtonControlDefinitionNoFeedback, StreamDeckButtonControlDefinitionRgbFeedback, StreamDeckButtonControlDefinitionLcdFeedback, StreamDeckEncoderControlDefinition, StreamDeckLcdSegmentControlDefinition, StreamDeckControlDefinition, StreamDeckTcpChildDeviceInfo, OpenStreamDeckOptions, PreparedBuffer, } from '@elgato-stream-deck/core';
export { StreamDeckWeb } from './wrapper.js';
/**
 * Request the user to select some streamdecks to open
 * @param userOptions Options to customise the device behvaiour
 */
export declare function requestStreamDecks(options?: OpenStreamDeckOptions): Promise<StreamDeckWeb[]>;
/**
 * Reopen previously selected streamdecks.
 * The browser remembers what the user previously allowed your site to access, and this will open those without the request dialog
 * @param options Options to customise the device behvaiour
 */
export declare function getStreamDecks(options?: OpenStreamDeckOptions): Promise<StreamDeckWeb[]>;
/**
 * Open a StreamDeck from a manually selected HIDDevice handle
 * @param browserDevice The unopened browser HIDDevice
 * @param userOptions Options to customise the device behvaiour
 */
export declare function openDevice(browserDevice: HIDDevice, userOptions?: OpenStreamDeckOptions): Promise<StreamDeckWeb>;
//# sourceMappingURL=index.d.ts.map