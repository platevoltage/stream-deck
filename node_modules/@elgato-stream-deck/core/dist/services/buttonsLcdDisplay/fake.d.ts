import type { Dimension, KeyIndex } from '../../id.js';
import type { ButtonsLcdDisplayService } from './interface.js';
import type { FillPanelDimensionsOptions, FillImageOptions, FillPanelOptions } from '../../types.js';
import type { PreparedBuffer } from '../../preparedBuffer.js';
export declare class FakeLcdService implements ButtonsLcdDisplayService {
    calculateFillPanelDimensions(_options?: FillPanelDimensionsOptions): Dimension | null;
    clearKey(_keyIndex: number): Promise<void>;
    clearPanel(): Promise<void>;
    fillKeyColor(_keyIndex: number, _r: number, _g: number, _b: number): Promise<void>;
    fillKeyBuffer(_keyIndex: number, _imageBuffer: Uint8Array, _options?: FillImageOptions): Promise<void>;
    prepareFillKeyBuffer(_keyIndex: KeyIndex, _imageBuffer: Uint8Array | Uint8ClampedArray, _options: FillImageOptions | undefined, _jsonSafe: boolean | undefined): Promise<PreparedBuffer>;
    fillPanelBuffer(_imageBuffer: Uint8Array, _options?: FillPanelOptions): Promise<void>;
    prepareFillPanelBuffer(_imageBuffer: Uint8Array | Uint8ClampedArray, _options: FillPanelOptions | undefined, _jsonSafe: boolean | undefined): Promise<PreparedBuffer>;
}
//# sourceMappingURL=fake.d.ts.map