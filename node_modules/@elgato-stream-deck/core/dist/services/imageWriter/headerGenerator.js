"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StreamdeckNeoLcdImageHeaderGenerator = exports.StreamdeckPlusLcdImageHeaderGenerator = exports.StreamdeckGen2ImageHeaderGenerator = exports.StreamdeckGen1ImageHeaderGenerator = void 0;
const util_js_1 = require("../../util.js");
class StreamdeckGen1ImageHeaderGenerator {
    getFillImageCommandHeaderLength() {
        return 16;
    }
    writeFillImageCommandHeader(buffer, props, partIndex, isLast, _bodyLength) {
        const bufferView = (0, util_js_1.uint8ArrayToDataView)(buffer);
        bufferView.setUint8(0, 0x02);
        bufferView.setUint8(1, 0x01);
        bufferView.setUint16(2, partIndex, true);
        bufferView.setUint8(4, isLast ? 1 : 0);
        bufferView.setUint8(5, props.keyIndex + 1);
    }
}
exports.StreamdeckGen1ImageHeaderGenerator = StreamdeckGen1ImageHeaderGenerator;
class StreamdeckGen2ImageHeaderGenerator {
    getFillImageCommandHeaderLength() {
        return 8;
    }
    writeFillImageCommandHeader(buffer, props, partIndex, isLast, bodyLength) {
        const bufferView = (0, util_js_1.uint8ArrayToDataView)(buffer);
        bufferView.setUint8(0, 0x02);
        bufferView.setUint8(1, 0x07);
        bufferView.setUint8(2, props.keyIndex);
        bufferView.setUint8(3, isLast ? 1 : 0);
        bufferView.setUint16(4, bodyLength, true);
        bufferView.setUint16(6, partIndex++, true);
    }
}
exports.StreamdeckGen2ImageHeaderGenerator = StreamdeckGen2ImageHeaderGenerator;
class StreamdeckPlusLcdImageHeaderGenerator {
    getFillImageCommandHeaderLength() {
        return 16;
    }
    writeFillImageCommandHeader(buffer, props, partIndex, isLast, bodyLength) {
        const bufferView = (0, util_js_1.uint8ArrayToDataView)(buffer);
        bufferView.setUint8(0, 0x02);
        bufferView.setUint8(1, 0x0c);
        bufferView.setUint16(2, props.x, true);
        bufferView.setUint16(4, props.y, true);
        bufferView.setUint16(6, props.width, true);
        bufferView.setUint16(8, props.height, true);
        bufferView.setUint8(10, isLast ? 1 : 0);
        bufferView.setUint16(11, partIndex, true);
        bufferView.setUint16(13, bodyLength, true);
    }
}
exports.StreamdeckPlusLcdImageHeaderGenerator = StreamdeckPlusLcdImageHeaderGenerator;
class StreamdeckNeoLcdImageHeaderGenerator {
    getFillImageCommandHeaderLength() {
        return 8;
    }
    writeFillImageCommandHeader(buffer, _props, partIndex, isLast, bodyLength) {
        const bufferView = (0, util_js_1.uint8ArrayToDataView)(buffer);
        bufferView.setUint8(0, 0x02);
        bufferView.setUint8(1, 0x0b);
        bufferView.setUint8(2, 0);
        bufferView.setUint8(3, isLast ? 1 : 0);
        bufferView.setUint16(4, bodyLength, true);
        bufferView.setUint16(6, partIndex, true);
    }
}
exports.StreamdeckNeoLcdImageHeaderGenerator = StreamdeckNeoLcdImageHeaderGenerator;
//# sourceMappingURL=headerGenerator.js.map