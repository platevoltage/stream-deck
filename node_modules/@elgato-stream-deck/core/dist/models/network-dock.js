"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NetworkDockFactory = NetworkDockFactory;
const base_js_1 = require("./base.js");
const id_js_1 = require("../id.js");
const controlsGenerator_js_1 = require("../controlsGenerator.js");
const callback_hook_js_1 = require("../services/callback-hook.js");
const fake_js_1 = require("../services/buttonsLcdDisplay/fake.js");
const fake_js_2 = require("../services/input/fake.js");
const network_dock_js_1 = require("../services/properties/network-dock.js");
const networkDockProperties = {
    MODEL: id_js_1.DeviceModelId.NETWORK_DOCK,
    PRODUCT_NAME: id_js_1.MODEL_NAMES[id_js_1.DeviceModelId.NETWORK_DOCK],
    KEY_DATA_OFFSET: 0,
    SUPPORTS_RGB_KEY_FILL: false,
    CONTROLS: (0, controlsGenerator_js_1.freezeDefinitions)([]),
    KEY_SPACING_HORIZONTAL: 0,
    KEY_SPACING_VERTICAL: 0,
    FULLSCREEN_PANELS: 0,
    HAS_NFC_READER: false,
    SUPPORTS_CHILD_DEVICES: true,
};
function NetworkDockFactory(device, options, _tcpPropertiesService) {
    const events = new callback_hook_js_1.CallbackHook();
    return new base_js_1.StreamDeckBase(device, options, {
        deviceProperties: networkDockProperties,
        events,
        properties: new network_dock_js_1.NetworkDockPropertiesService(device),
        buttonsLcd: new fake_js_1.FakeLcdService(),
        lcdSegmentDisplay: null,
        inputService: new fake_js_2.FakeInputService(),
        encoderLed: null,
    });
}
//# sourceMappingURL=network-dock.js.map